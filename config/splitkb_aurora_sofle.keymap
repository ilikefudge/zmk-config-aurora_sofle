/*
 * Copyright (c) 2023 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>

/* Uncomment this block if using RGB
&led_strip {
    chain-length = <6>;
    // chain-length = <35>; // Uncomment if using both per-key and underglow LEDs
    // chain-length = <29>; // Uncomment if using only per-key LEDs.
};
 */

/ {
    behaviors {
        new_behavior: new_behavior {
            compatible = "zmk,behavior-hold-tap";
            label = "NEW_BEHAVIOR";
            bindings = <&kp>, <&key_repeat>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
        };

        slashtap: slashtap {
            compatible = "zmk,behavior-tap-dance";
            label = "SLASHTAP";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp SLASH>, <&kp BSLH>;
        };

        parentap: parentap {
            compatible = "zmk,behavior-tap-dance";
            label = "PARENTAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_PARENTHESIS>, <&kp RIGHT_PARENTHESIS>;
        };

        bracktap: bracktap {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACKTAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        bracetap: bracetap {
            compatible = "zmk,behavior-tap-dance";
            label = "BRACETAP";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACE>, <&kp RIGHT_BRACE>;
        };

        apostap: apostap {
            compatible = "zmk,behavior-tap-dance";
            label = "APOSTAP";
            #binding-cells = <0>;
            bindings = <&kp APOS>, <&kp LS(APOS)>;
        };

        backtap: backtap {
            compatible = "zmk,behavior-tap-dance";
            label = "BACKTAP";
            #binding-cells = <0>;
            bindings = <&kp BACKSPACE>, <&kp LC(BACKSPACE)>;
        };

        comptap: comptap {
            compatible = "zmk,behavior-tap-dance";
            label = "COMPTAP";
            #binding-cells = <0>;
            bindings = <&kp LESS_THAN>, <&kp GREATER_THAN>;
        };

        printscreen: printscreen {
            compatible = "zmk,behavior-tap-dance";
            label = "PRINTSCREEN";
            #binding-cells = <0>;
            bindings = <&kp LA(PSCRN)>, <&kp LG(PSCRN)>;

            tapping-term-ms = <400>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            // ------------------------------------------------------------------------------------------------------------
            // |  `    |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |       |
            // |  ESC  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   | BKSPC |
            // |  TAB  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |  MUTE  |  |       |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //               | GUI | ALT  | CTRL | LOWER|  ENTER |  | SPACE | RAISE| CTRL  | ALT   | GUI  |

            bindings = <
&kp F1          &kp F2  &kp F3            &kp F4    &kp F5       &kp F6                             &kp F7     &kp F8        &kp F9   &kp F10       &kp F11   &kp F12
&printscreen    &kp Q   &kp W             &kp F     &kp P        &kp B                              &kp J      &kp L         &kp U    &kp Y         &kp SEMI  &kp BSLH
&kp LEFT_SHIFT  &kp A   &kp R             &kp S     &kp T        &kp G                              &kp M      &kp N         &kp E    &kp I         &kp O     &kp LEFT_SHIFT
&kp DEL         &kp Z   &kp X             &kp C     &kp D        &kp COMMA  &lt 2 ENTER    &kp TAB  &kp DOT    &kp H         &kp K    &kp V         &kp FSLH  &tog 3
                        &kp LEFT_CONTROL  &kp LALT  &lt 5 MINUS  &backtap   &lt 2 ENTER    &kp TAB  &kp SPACE  &lt 4 PERIOD  &kp ESC  &kp LEFT_WIN
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        lower_layer {
            // TODO: Some binds are waiting for shifted keycode support.
            // ------------------------------------------------------------------------------------------------------------
            // |       |  F1 |  F2 |  F3  |  F4  |  F5  |                   |  F6  |  F7   |  F8   |  F9  |  F10  |  F11  |
            // | `     |   1 |   2 |   3  |   4  |   5  |                   |   6  |   7   |   8   |   9  |    0  |  F12  |
            // |       |  !  |  @  |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   |   |
            // |       |  =  |  -  |  +   |  {   |  }   |        |  |       |  [   |  ]    |  ;    |  :   |   \   |       |
            //               |     |      |      |      |        |  |       |      |       |       |      |

            bindings = <
&trans     &kp F1     &kp F2     &kp F3       &kp F4    &kp F5                       &kp F6     &kp F7    &kp F8           &kp F9     &kp F10   &kp F11
&kp GRAVE  &kp N1     &kp N2     &kp N3       &kp N4    &kp N5                       &kp N6     &kp N7    &kp N8           &kp N9     &kp N0    &kp F12
&trans     &kp EXCL   &kp AT     &kp HASH     &kp DLLR  &kp PRCNT                    &kp CARET  &kp AMPS  &kp KP_MULTIPLY  &kp LPAR   &kp RPAR  &kp PIPE
&trans     &kp EQUAL  &kp MINUS  &kp KP_PLUS  &kp LBRC  &kp RBRC   &trans    &trans  &kp LBKT   &kp RBKT  &kp SEMI         &kp COLON  &kp BSLH  &trans
                      &trans     &trans       &trans    &trans     &trans    &trans  &trans     &trans    &trans           &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        raise_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |BTCLR| BT1  | BT2  |  BT3  |  BT4  |  BT5 |                |      |      |       |      |       |       |
            // |     | INS  | PSCR | GUI   |       |      |                | PGUP |      |   ^   |      |       |       |
            // |     | ALT  | CTRL | SHIFT |       | CAPS |                | PGDN |   <- |   v   |  ->  |  DEL  | BKSPC |
            // |     | UNDO | CUT  | COPY  | PASTE |      |      |  |      |      |      |       |      |       |       |
            //              |      |       |       |      |      |  |      |      |      |       |      |

            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans     &trans    &trans    &trans     &trans   &trans
&trans      &kp INS       &kp PSCRN     &kp K_CMENU   &trans        &trans                          &kp PG_UP  &trans    &kp UP    &trans     &kp N0   &trans
&trans      &kp LALT      &kp LCTRL     &kp LSHFT     &trans        &kp CLCK                        &kp PG_DN  &kp LEFT  &kp DOWN  &kp RIGHT  &kp DEL  &kp BSPC
&trans      &kp K_UNDO    &kp K_CUT     &kp K_COPY    &kp K_PASTE   &trans        &trans    &trans  &trans     &trans    &trans    &trans     &trans   &trans
                          &trans        &trans        &trans        &trans        &trans    &trans  &trans     &trans    &trans    &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN &inc_dec_kp PG_UP PG_DN>;
        };

        // ------------------------------------------------------------------------------------------------------------
        // |BTCLR | BT1   | BT2   |  BT3  |  BT4  |  BT5  |                |      |      |       |      |       |       |
        // |EXTPWR|RGB_HUD|RGB_HUI|RGB_SAD|RGB_SAI|RGB_EFF|                |      |      |       |      |       |       |
        // |      |RGB_BRD|RGB_BRI|       |       |       |                |      |      |       |      |       |       |
        // |      |       |       |       |       |       |RGB_TOG| |      |      |      |       |      |       |       |
        //                |       |       |       |       |       | |      |      |      |       |      |

        Adjust_layer {
            bindings = <
&bt BT_CLR                       &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4                               &none  &none  &none  &none  &none  &none
&ext_power EXT_POWER_TOGGLE_CMD  &rgb_ug RGB_HUD  &rgb_ug RGB_HUI  &rgb_ug RGB_SAD  &rgb_ug RGB_SAI  &rgb_ug RGB_EFF                            &none  &none  &none  &none  &none  &none
&none                            &rgb_ug RGB_BRD  &rgb_ug RGB_BRI  &none            &none            &none                                      &none  &none  &none  &none  &none  &none
&none                            &none            &none            &bt BT_CLR       &bt BT_NXT       &none            &rgb_ug RGB_TOG    &none  &none  &none  &none  &none  &none  &none
                                                  &none            &none            &none            &none            &none              &none  &none  &none  &none  &none
            >;
        };

        sym {
            bindings = <
&trans    &trans     &trans        &trans     &trans     &trans                          &trans  &trans      &trans  &trans      &trans       &trans
&trans    &kp GRAVE  &kp ASTERISK  &none      &kp MINUS  &none                           &trans  &trans      &trans  &trans      &trans       &trans
&kp PIPE  &kp EQUAL  &bracetap     &bracktap  &parentap  &slashtap                       &trans  &kp PERIOD  &kp AT  &kp DOLLAR  &kp PERCENT  &kp AMPERSAND
&trans    &comptap   &kp CARET     &kp HASH   &apostap   &trans      &kp END     &trans  &trans  &trans      &trans  &trans      &trans       &trans
                     &trans        &trans     &kp COMMA  &kp PERIOD  &kp EXCL    &trans  &trans  &trans      &trans  &trans
            >;
        };

        num {
            bindings = <
&trans  &trans  &trans        &trans     &trans      &trans                    &trans   &trans   &trans  &trans  &trans  &trans
&trans  &trans  &trans        &trans     &trans      &trans                    &trans   &kp N7   &kp N8  &kp N9  &trans  &trans
&trans  &trans  &kp LEFT_ALT  &kp LCTRL  &kp LSHIFT  &trans                    &trans   &kp N4   &kp N5  &kp N6  &trans  &trans
&trans  &trans  &trans        &trans     &trans      &trans  &trans    &trans  &trans   &kp N1   &kp N2  &kp N3  &trans  &trans
                &trans        &trans     &trans      &trans  &trans    &kp N0  &kp DOT  &kp DOT  &trans  &trans

            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
    };
};
